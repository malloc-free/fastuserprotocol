.TH "src/tb_file_io.h" 3 "Wed Feb 12 2014" "Version 0.2" "TestBed" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/tb_file_io.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <fcntl\&.h>\fP
.br
\fC#include <libaio\&.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBtb_file_t\fP"
.br
.RI "\fIThe struct that contains information about the file\&. \fP"
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBtb_io_type\fP { \fBIO_SYNC\fP =  0, \fBIO_BUFF_SYNC\fP, \fBIO_ASYNC\fP, \fBIO_MMAP\fP }"
.br
.ti -1c
.RI "enum \fBtb_o_flags\fP { \fBREAD_WRITE_ONLY\fP =  O_RDWR, \fBREAD_WRITE_CREATE\fP =  O_RDWR | O_CREAT }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBtb_file_t\fP * \fBtb_setup_mmap\fP (char *file_path, \fBtb_o_flags\fP flags, int file_len)"
.br
.RI "\fISetup mmap for io\&. \fP"
.ti -1c
.RI "int \fBtb_write_mmap\fP (\fBtb_file_t\fP *file, char *buff, int off, int len)"
.br
.RI "\fIWrite to a file using mmap\&. \fP"
.ti -1c
.RI "int \fBtb_read_mmap\fP (\fBtb_file_t\fP *file, char *buf, int off, int len)"
.br
.RI "\fIRead a file using mmap\&. \fP"
.ti -1c
.RI "int \fBtb_close_mmap\fP (\fBtb_file_t\fP *file)"
.br
.RI "\fIclose mmap\&. \fP"
.ti -1c
.RI "\fBtb_file_t\fP * \fBtb_setup_s\fP (char *file_path, \fBtb_o_flags\fP flags, int file_len)"
.br
.RI "\fISetup for synchronous io\&. \fP"
.ti -1c
.RI "int \fBtb_read_s\fP (\fBtb_file_t\fP *file, char *buf, int off, int len)"
.br
.RI "\fIRead a file synchronously\&. \fP"
.ti -1c
.RI "int \fBtb_write_s\fP (\fBtb_file_t\fP *file, char *buf, int off, int len)"
.br
.RI "\fIWrite to a file synchronously\&. \fP"
.ti -1c
.RI "int \fBtb_close_s\fP (\fBtb_file_t\fP *file)"
.br
.RI "\fIClose for synchronous io\&. \fP"
.ti -1c
.RI "\fBtb_file_t\fP * \fBtb_setup_buffs\fP (char *file_path, \fBtb_o_flags\fP flags, int file_len)"
.br
.ti -1c
.RI "int \fBtb_read_buffs\fP (\fBtb_file_t\fP *file, char *buf, int off, int len)"
.br
.ti -1c
.RI "int \fBtb_write_buffs\fP (\fBtb_file_t\fP *file, char *buf, int off, int len)"
.br
.ti -1c
.RI "int \fBtb_close_buffs\fP (\fBtb_file_t\fP *file)"
.br
.ti -1c
.RI "\fBtb_file_t\fP * \fBtb_setup_as\fP (char *file_path)"
.br
.RI "\fISetup asynchronous io\&. \fP"
.ti -1c
.RI "int \fBtb_read_as\fP (\fBtb_file_t\fP *file)"
.br
.RI "\fIRead a file asynchronously\&. \fP"
.ti -1c
.RI "int \fBtb_write_as\fP (\fBtb_file_t\fP *file)"
.br
.RI "\fIWrite to a file asynchronously\&. \fP"
.ti -1c
.RI "int \fBtb_close_as\fP (\fBtb_file_t\fP *file)"
.br
.RI "\fIClose asynchronous io\&. \fP"
.in -1c
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBtb_io_type\fP"

.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIIO_SYNC \fP\fP
.TP
\fB\fIIO_BUFF_SYNC \fP\fP
.TP
\fB\fIIO_ASYNC \fP\fP
.TP
\fB\fIIO_MMAP \fP\fP

.PP
Definition at line 21 of file tb_file_io\&.h\&.
.SS "enum \fBtb_o_flags\fP"

.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIREAD_WRITE_ONLY \fP\fP
.TP
\fB\fIREAD_WRITE_CREATE \fP\fP

.PP
Definition at line 38 of file tb_file_io\&.h\&.
.SH "Function Documentation"
.PP 
.SS "int tb_close_as (\fBtb_file_t\fP *file)"

.PP
Close asynchronous io\&. 
.PP
Definition at line 364 of file tb_file_io\&.c\&.
.SS "int tb_close_buffs (\fBtb_file_t\fP *file)"

.PP
Definition at line 313 of file tb_file_io\&.c\&.
.SS "int tb_close_mmap (\fBtb_file_t\fP *file)"

.PP
close mmap\&. 
.PP
Definition at line 139 of file tb_file_io\&.c\&.
.SS "int tb_close_s (\fBtb_file_t\fP *file)"

.PP
Close for synchronous io\&. 
.PP
Definition at line 182 of file tb_file_io\&.c\&.
.SS "int tb_read_as (\fBtb_file_t\fP *file)"

.PP
Read a file asynchronously\&. 
.PP
Definition at line 346 of file tb_file_io\&.c\&.
.SS "int tb_read_buffs (\fBtb_file_t\fP *file, char *buf, intoff, intlen)"

.PP
Definition at line 299 of file tb_file_io\&.c\&.
.SS "int tb_read_mmap (\fBtb_file_t\fP *file, char *buf, intoff, intlen)"

.PP
Read a file using mmap\&. 
.PP
Definition at line 128 of file tb_file_io\&.c\&.
.SS "int tb_read_s (\fBtb_file_t\fP *file, char *buf, intoff, intlen)"

.PP
Read a file synchronously\&. 
.PP
Definition at line 193 of file tb_file_io\&.c\&.
.SS "\fBtb_file_t\fP* tb_setup_as (char *file_path)"

.PP
Setup asynchronous io\&. 
.PP
Definition at line 325 of file tb_file_io\&.c\&.
.SS "\fBtb_file_t\fP* tb_setup_buffs (char *file_path, \fBtb_o_flags\fPflags, intfile_len)"

.PP
Definition at line 232 of file tb_file_io\&.c\&.
.SS "\fBtb_file_t\fP* tb_setup_mmap (char *file_path, \fBtb_o_flags\fPflags, intfile_len)"

.PP
Setup mmap for io\&. 
.PP
Definition at line 66 of file tb_file_io\&.c\&.
.SS "\fBtb_file_t\fP* tb_setup_s (char *file_path, \fBtb_o_flags\fPflags, intfile_len)"

.PP
Setup for synchronous io\&. 
.PP
Definition at line 151 of file tb_file_io\&.c\&.
.SS "int tb_write_as (\fBtb_file_t\fP *file)"

.PP
Write to a file asynchronously\&. 
.PP
Definition at line 355 of file tb_file_io\&.c\&.
.SS "int tb_write_buffs (\fBtb_file_t\fP *file, char *buf, intoff, intlen)"

.PP
Definition at line 285 of file tb_file_io\&.c\&.
.SS "int tb_write_mmap (\fBtb_file_t\fP *file, char *buff, intoff, intlen)"

.PP
Write to a file using mmap\&. 
.PP
Definition at line 117 of file tb_file_io\&.c\&.
.SS "int tb_write_s (\fBtb_file_t\fP *file, char *buf, intoff, intlen)"

.PP
Write to a file synchronously\&. 
.PP
Definition at line 214 of file tb_file_io\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for TestBed from the source code\&.
