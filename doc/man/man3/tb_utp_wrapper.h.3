.TH "src/tb_utp_wrapper.h" 3 "Tue Jan 21 2014" "Version 0.2" "TestBed" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/tb_utp_wrapper.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'tb_listener\&.h'\fP
.br
\fC#include <utp\&.h>\fP
.br
\fC#include <sys/socket\&.h>\fP
.br
\fC#include <netinet/in\&.h>\fP
.br
\fC#include <pthread\&.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBtb_utp_wrapper_t\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBtb_utp_setup\fP (void *data)"
.br
.ti -1c
.RI "int \fBpoll_for_events\fP (int time)"
.br
.ti -1c
.RI "void \fBtb_utp_read\fP (void *userdata, const byte *bytes, size_t count)"
.br
.ti -1c
.RI "void \fBtb_utp_write\fP (void *userdata, byte *bytes, size_t count)"
.br
.ti -1c
.RI "size_t \fBtb_utp_get_Rcv_buff\fP (void *userdata)"
.br
.ti -1c
.RI "void \fBtb_utp_state_change\fP (void *userdata, int state)"
.br
.ti -1c
.RI "void \fBtb_utp_error\fP (void *userdata, int errcode)"
.br
.ti -1c
.RI "void \fBtb_utp_overhead\fP (void *userdata, int send, size_t count, int type)"
.br
.ti -1c
.RI "void \fBtb_utp_send_to\fP (void *userdata, const byte *p, size_t len, const struct sockaddr *to, socklen_t tolen)"
.br
.ti -1c
.RI "void \fBtb_utp_incoming\fP (void *userdata, struct UTPSocket *socket)"
.br
.ti -1c
.RI "int \fBtb_utp_socket\fP (int domain, int type, int protocol)"
.br
.ti -1c
.RI "int \fBtb_utp_connect\fP (int fd, const struct sockaddr *addr, socklen_t len)"
.br
.ti -1c
.RI "int \fBtb_utp_send\fP (int fd, void *buf, size_t n, int sock_flags)"
.br
.ti -1c
.RI "int \fBtb_utp_recv_data\fP ()"
.br
.ti -1c
.RI "int \fBtb_utp_recv_from\fP (int fd, void *buf, size_t n, unsigned int flags, const struct sockaddr *to, socklen_t *tolen)"
.br
.ti -1c
.RI "void \fBtb_utp_recv\fP ()"
.br
.RI "\fIReceive data from a uTP socket\&. \fP"
.ti -1c
.RI "int \fBtb_utp_funct_exit\fP ()"
.br
.ti -1c
.RI "int \fBtb_utp_error_handle\fP (int value)"
.br
.ti -1c
.RI "int \fBtb_utp_close\fP (int sock)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "int poll_for_events (inttime)"

.PP
Definition at line 74 of file tb_utp_wrapper\&.c\&.
.SS "int tb_utp_close (intsock)"

.PP
Definition at line 425 of file tb_utp_wrapper\&.c\&.
.SS "int tb_utp_connect (intfd, const struct sockaddr *addr, socklen_tlen)"

.PP
Definition at line 267 of file tb_utp_wrapper\&.c\&.
.SS "void tb_utp_error (void *userdata, interrcode)"

.PP
Definition at line 176 of file tb_utp_wrapper\&.c\&.
.SS "int tb_utp_error_handle (intvalue)"

.PP
Definition at line 419 of file tb_utp_wrapper\&.c\&.
.SS "int tb_utp_funct_exit ()"

.PP
Definition at line 413 of file tb_utp_wrapper\&.c\&.
.SS "size_t tb_utp_get_Rcv_buff (void *userdata)"

.PP
Definition at line 153 of file tb_utp_wrapper\&.c\&.
.SS "void tb_utp_incoming (void *userdata, struct UTPSocket *socket)"

.PP
Definition at line 204 of file tb_utp_wrapper\&.c\&.
.SS "void tb_utp_overhead (void *userdata, intsend, size_tcount, inttype)"

.PP
Definition at line 183 of file tb_utp_wrapper\&.c\&.
.SS "void tb_utp_read (void *userdata, const byte *bytes, size_tcount)"

.PP
Definition at line 131 of file tb_utp_wrapper\&.c\&.
.SS "void tb_utp_recv ()"

.PP
Receive data from a uTP socket\&. 
.PP
Definition at line 404 of file tb_utp_wrapper\&.c\&.
.SS "int tb_utp_recv_data ()"

.PP
Definition at line 330 of file tb_utp_wrapper\&.c\&.
.SS "int tb_utp_recv_from (intfd, void *buf, size_tn, unsigned intflags, const struct sockaddr *to, socklen_t *tolen)"

.PP
Definition at line 381 of file tb_utp_wrapper\&.c\&.
.SS "int tb_utp_send (intfd, void *buf, size_tn, intsock_flags)"

.PP
Definition at line 295 of file tb_utp_wrapper\&.c\&.
.SS "void tb_utp_send_to (void *userdata, const byte *p, size_tlen, const struct sockaddr *to, socklen_ttolen)"

.PP
Definition at line 189 of file tb_utp_wrapper\&.c\&.
.SS "int tb_utp_setup (void *data)"

.PP
Definition at line 35 of file tb_utp_wrapper\&.c\&.
.SS "int tb_utp_socket (intdomain, inttype, intprotocol)"

.PP
Definition at line 213 of file tb_utp_wrapper\&.c\&.
.SS "void tb_utp_state_change (void *userdata, intstate)"

.PP
Definition at line 159 of file tb_utp_wrapper\&.c\&.
.SS "void tb_utp_write (void *userdata, byte *bytes, size_tcount)"

.PP
Definition at line 143 of file tb_utp_wrapper\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for TestBed from the source code\&.
