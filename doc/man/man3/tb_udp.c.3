.TH "src/tb_udp.c" 3 "Wed Feb 12 2014" "Version 0.2" "TestBed" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/tb_udp.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'tb_udp\&.h'\fP
.br
\fC#include 'tb_epoll\&.h'\fP
.br
\fC#include 'tb_session\&.h'\fP
.br
\fC#include 'tb_common\&.h'\fP
.br
\fC#include 'tb_listener\&.h'\fP
.br
\fC#include 'tb_worker\&.h'\fP
.br
\fC#include 'tb_utp\&.h'\fP
.br
\fC#include 'tb_testbed\&.h'\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <assert\&.h>\fP
.br
\fC#include <pthread\&.h>\fP
.br
\fC#include <sys/socket\&.h>\fP
.br
\fC#include <fcntl\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <sys/epoll\&.h>\fP
.br
\fC#include <time\&.h>\fP
.br
\fC#include <sys/ioctl\&.h>\fP
.br
\fC#include <netinet/in\&.h>\fP
.br
\fC#include <netdb\&.h>\fP
.br
\fC#include <udt\&.h>\fP
.br
\fC#include <errno\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBtb_udp_client\fP (\fBtb_listener_t\fP *listener)"
.br
.RI "\fIUpload a file using udp with epoll eof ack\&. \fP"
.ti -1c
.RI "int \fBtb_udp_ack\fP (int events, void *data)"
.br
.RI "\fICallback function for udp\&. \fP"
.ti -1c
.RI "int \fBtb_udp_epoll_client\fP (\fBtb_listener_t\fP *listener)"
.br
.RI "\fIUses epoll for receiving data from the client\&. This is a prototype for TB0\&.2\&. \fP"
.ti -1c
.RI "int \fBtb_udp_m_client\fP (\fBtb_listener_t\fP *listener)"
.br
.RI "\fICalled to create and start a udp client\&. \fP"
.ti -1c
.RI "int \fBtb_udp_server\fP (\fBtb_listener_t\fP *listener)"
.br
.RI "\fIRun a server using UDP, and epoll to signal transmission end\&. \fP"
.ti -1c
.RI "int \fBtb_udp_epoll_server\fP (\fBtb_listener_t\fP *listener)"
.br
.RI "\fIRun a server using epoll (non-blocking socket)\&. \fP"
.ti -1c
.RI "int \fBtb_udp_m_server\fP (\fBtb_listener_t\fP *listener)"
.br
.RI "\fICalled to create and start a udp server\&. \fP"
.ti -1c
.RI "int \fBtb_udp_event\fP (int events, void *data)"
.br
.RI "\fIEpoll events function\&. \fP"
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const int \fBDATA_SIZE\fP = 1024"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "int tb_udp_ack (intevents, void *data)"

.PP
Callback function for udp\&. This is the function that is called when the eof from the server has be acknowledged\&. 
.PP
Definition at line 105 of file tb_udp\&.c\&.
.SS "int tb_udp_client (\fBtb_listener_t\fP *listener)"

.PP
Upload a file using udp with epoll eof ack\&. The difference between upload_random_udp and udp is that this uses the epoll mechanism to listenen for an ack of the eof\&. This insures that transmission is complete in the event of packet loss\&. 
.PP
Definition at line 37 of file tb_udp\&.c\&.
.SS "int tb_udp_epoll_client (\fBtb_listener_t\fP *listener)"

.PP
Uses epoll for receiving data from the client\&. This is a prototype for TB0\&.2\&. 
.PP
Definition at line 117 of file tb_udp\&.c\&.
.SS "int tb_udp_epoll_server (\fBtb_listener_t\fP *listener)"

.PP
Run a server using epoll (non-blocking socket)\&. Runs a server that uses a sockets based protocol using epoll\&. Not used by UDT, aUDT or any thing else not implemented in sockets\&.
.PP
\fBParameters:\fP
.RS 4
\fIlistener\fP The listener to run the server with\&. 
.RE
.PP

.PP
Definition at line 228 of file tb_udp\&.c\&.
.SS "int tb_udp_event (intevents, void *data)"

.PP
Epoll events function\&. This is called when events occur on sockets that are polled by epoll\&. Processes incoming data\&. 
.PP
Definition at line 268 of file tb_udp\&.c\&.
.SS "int tb_udp_m_client (\fBtb_listener_t\fP *listener)"

.PP
Called to create and start a udp client\&. 
.PP
Definition at line 134 of file tb_udp\&.c\&.
.SS "int tb_udp_m_server (\fBtb_listener_t\fP *listener)"

.PP
Called to create and start a udp server\&. 
.PP
Definition at line 252 of file tb_udp\&.c\&.
.SS "int tb_udp_server (\fBtb_listener_t\fP *listener)"

.PP
Run a server using UDP, and epoll to signal transmission end\&. 
.PP
Definition at line 182 of file tb_udp\&.c\&.
.SH "Variable Documentation"
.PP 
.SS "const int DATA_SIZE = 1024"

.PP
Definition at line 34 of file tb_udp\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for TestBed from the source code\&.
