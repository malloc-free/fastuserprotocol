.TH "src/tb_stream.c" 3 "Wed Feb 12 2014" "Version 0.2" "TestBed" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/tb_stream.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'tb_stream\&.h'\fP
.br
\fC#include 'tb_protocol\&.h'\fP
.br
\fC#include 'tb_listener\&.h'\fP
.br
\fC#include 'tb_testbed\&.h'\fP
.br
\fC#include 'tb_common\&.h'\fP
.br
\fC#include 'tb_udp\&.h'\fP
.br
\fC#include 'tb_utp\&.h'\fP
.br
\fC#include 'udt\&.h'\fP
.br
\fC#include 'tb_session\&.h'\fP
.br
\fC#include <utp\&.h>\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <assert\&.h>\fP
.br
\fC#include <pthread\&.h>\fP
.br
\fC#include <sys/socket\&.h>\fP
.br
\fC#include <fcntl\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <sys/epoll\&.h>\fP
.br
\fC#include <time\&.h>\fP
.br
\fC#include <errno\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBtb_stream_server\fP (\fBtb_listener_t\fP *listener)"
.br
.RI "\fIRun a server without epoll (blocking socket)\&. \fP"
.ti -1c
.RI "int \fBtb_stream_m_server\fP (\fBtb_listener_t\fP *listener)"
.br
.RI "\fIRun a multiple connection server\&. \fP"
.ti -1c
.RI "int \fBtb_stream_event\fP (int events, void *data)"
.br
.RI "\fICalled by epoll\&. \fP"
.ti -1c
.RI "void * \fBtb_stream_m_server_conn\fP (void *data)"
.br
.RI "\fIIndividual stream connections for multiple stream servers\&. \fP"
.ti -1c
.RI "int \fBtb_stream_m_client\fP (\fBtb_listener_t\fP *listener)"
.br
.RI "\fIUpload using stream sockets\&. \fP"
.ti -1c
.RI "void * \fBtb_stream_connection\fP (void *data)"
.br
.RI "\fIA single stream connection\&. \fP"
.ti -1c
.RI "int \fBtb_stream_client\fP (\fBtb_listener_t\fP *listener)"
.br
.RI "\fIUpload with a single connection\&. \fP"
.in -1c
.SH "Function Documentation"
.PP 
.SS "int tb_stream_client (\fBtb_listener_t\fP *listener)"

.PP
Upload with a single connection\&. 
.PP
Definition at line 370 of file tb_stream\&.c\&.
.SS "void* tb_stream_connection (void *data)"

.PP
A single stream connection\&. 
.PP
Definition at line 312 of file tb_stream\&.c\&.
.SS "int tb_stream_event (intevents, void *data)"

.PP
Called by epoll\&. 
.PP
Definition at line 123 of file tb_stream\&.c\&.
.SS "int tb_stream_m_client (\fBtb_listener_t\fP *listener)"

.PP
Upload using stream sockets\&. Upload using bsd stream based protocols (TCP, DCCP) with multiple connections\&. 
.PP
Definition at line 222 of file tb_stream\&.c\&.
.SS "int tb_stream_m_server (\fBtb_listener_t\fP *listener)"

.PP
Run a multiple connection server\&. \fBParameters:\fP
.RS 4
\fIlistener\fP The listener to create the server for 
.RE
.PP

.PP
Definition at line 106 of file tb_stream\&.c\&.
.SS "void* tb_stream_m_server_conn (void *data)"

.PP
Individual stream connections for multiple stream servers\&. 
.PP
Definition at line 175 of file tb_stream\&.c\&.
.SS "int tb_stream_server (\fBtb_listener_t\fP *listener)"

.PP
Run a server without epoll (blocking socket)\&. Runs a server without using epoll, so the socket blocks\&. Also used by UDT, aUDT and other protocols that are not implemented in sockets\&.
.PP
\fBParameters:\fP
.RS 4
\fIlistener\fP The listener to run the server with\&. 
.RE
.PP

.PP
Definition at line 36 of file tb_stream\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for TestBed from the source code\&.
