.TH "src/tb_server.h" 3 "Fri Feb 7 2014" "Version 0.2" "TestBed" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/tb_server.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'tb_listener\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void * \fBtb_server\fP (void *data) __attribute__((__noreturn__))"
.br
.RI "\fIRuns the server\&. \fP"
.ti -1c
.RI "int \fBtb_stream_server\fP (\fBtb_listener_t\fP *listener)"
.br
.RI "\fIRun a server without epoll (blocking socket)\&. \fP"
.ti -1c
.RI "int \fBtb_stream_m_server\fP (\fBtb_listener_t\fP *listener)"
.br
.ti -1c
.RI "int \fBtb_stream_event\fP (int events, void *data)"
.br
.ti -1c
.RI "void * \fBtb_stream_m_server_conn\fP (void *data)"
.br
.ti -1c
.RI "int \fBtb_udt_server\fP (\fBtb_listener_t\fP *listener)"
.br
.RI "\fIRun the server with UDT\&. \fP"
.ti -1c
.RI "int \fBtb_udp_server\fP (\fBtb_listener_t\fP *listener)"
.br
.RI "\fIRun a server using UDP, and epoll to signal transmission end\&. \fP"
.ti -1c
.RI "int \fBtb_utp_server\fP (\fBtb_listener_t\fP *listener)"
.br
.RI "\fIRun a server with uTP\&. \fP"
.ti -1c
.RI "int \fBtb_udp_epoll_server\fP (\fBtb_listener_t\fP *listener)"
.br
.RI "\fIRun a server using epoll (non-blocking socket)\&. \fP"
.in -1c
.SH "Function Documentation"
.PP 
.SS "void* tb_server (void *data)"

.PP
Runs the server\&. This starts a server instance, called from pthread_create\&.
.PP
\fBPrecondition:\fP
.RS 4
data must be of type \fBtb_listener_t\fP\&. 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP This is an instance of \fBtb_listener_t\fP\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
As pthread_exit is called, this does not return\&. 
.RE
.PP

.PP
Definition at line 34 of file tb_server\&.c\&.
.SS "int tb_stream_event (intevents, void *data)"

.PP
Definition at line 177 of file tb_server\&.c\&.
.SS "int tb_stream_m_server (\fBtb_listener_t\fP *listener)"

.PP
Definition at line 160 of file tb_server\&.c\&.
.SS "void* tb_stream_m_server_conn (void *data)"

.PP
Definition at line 232 of file tb_server\&.c\&.
.SS "int tb_stream_server (\fBtb_listener_t\fP *listener)"

.PP
Run a server without epoll (blocking socket)\&. Runs a server without using epoll, so the socket blocks\&. Also used by UDT, aUDT and other protocols that are not implemented in sockets\&.
.PP
\fBParameters:\fP
.RS 4
\fIlistener\fP The listener to run the server with\&. 
.RE
.PP

.PP
Definition at line 97 of file tb_server\&.c\&.
.SS "int tb_udp_epoll_server (\fBtb_listener_t\fP *listener)"

.PP
Run a server using epoll (non-blocking socket)\&. Runs a server that uses a sockets based protocol using epoll\&. Not used by UDT, aUDT or any thing else not implemented in sockets\&.
.PP
\fBParameters:\fP
.RS 4
\fIlistener\fP The listener to run the server with\&. 
.RE
.PP

.PP
Definition at line 462 of file tb_server\&.c\&.
.SS "int tb_udp_server (\fBtb_listener_t\fP *listener)"

.PP
Run a server using UDP, and epoll to signal transmission end\&. 
.PP
Definition at line 371 of file tb_server\&.c\&.
.SS "int tb_udt_server (\fBtb_listener_t\fP *listener)"

.PP
Run the server with UDT\&. This runs the TB server with the UDT protocol\&.
.PP
\fBParameters:\fP
.RS 4
\fIlistener\fP The listener to run with\&. 
.RE
.PP

.PP
Definition at line 278 of file tb_server\&.c\&.
.SS "int tb_utp_server (\fBtb_listener_t\fP *listener)"

.PP
Run a server with uTP\&. 
.PP
Definition at line 419 of file tb_server\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for TestBed from the source code\&.
