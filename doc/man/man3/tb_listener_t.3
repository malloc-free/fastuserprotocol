.TH "tb_listener_t" 3 "Mon Feb 10 2014" "Version 0.2" "TestBed" \" -*- nroff -*-
.ad l
.nh
.SH NAME
tb_listener_t \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <tb_listener\&.h>\fP
.SS "Data Fields"

.in +1c
.ti -1c
.RI "gdsl_hash_t \fB__sessions\fP"
.br
.ti -1c
.RI "gdsl_heap_t \fB__workers\fP"
.br
.RI "\fIThe workers for this listener\&. \fP"
.ti -1c
.RI "int \fB__num_threads\fP"
.br
.RI "\fIThe number of threads for listener\&. \fP"
.ti -1c
.RI "GHashTable * \fBsessions\fP"
.br
.RI "\fIActive sessions\&. \fP"
.ti -1c
.RI "pthread_t * \fB__l_thread\fP"
.br
.RI "\fIThe thread the listener is on\&. \fP"
.ti -1c
.RI "int \fBsys_tid\fP"
.br
.RI "\fIThe id returned from syscall\&. \fP"
.ti -1c
.RI "pthread_mutex_t * \fBstat_lock\fP"
.br
.RI "\fILocks the stats field for writing\&. \fP"
.ti -1c
.RI "pthread_cond_t * \fBstat_cond\fP"
.br
.RI "\fIThe condition for releasing external threads\&. \fP"
.ti -1c
.RI "pthread_mutex_t * \fBstatus_lock\fP"
.br
.RI "\fILock for safe set/get of listener status\&. \fP"
.ti -1c
.RI "int \fBnum_proc\fP"
.br
.RI "\fIThe number of processors available\&. \fP"
.ti -1c
.RI "int \fBcpu_affinity\fP"
.br
.RI "\fIThe affinity for the listener thread\&. \fP"
.ti -1c
.RI "int \fBmain_cpu_aff\fP"
.br
.RI "\fIThe affinity for the main thread\&. \fP"
.ti -1c
.RI "\fBENDPOINT_TYPE\fP \fBe_type\fP"
.br
.RI "\fIThe type of endpoint this is\&. \fP"
.ti -1c
.RI "char * \fBbind_address\fP"
.br
.RI "\fIThe bind address for this listener\&. \fP"
.ti -1c
.RI "char * \fBbind_port\fP"
.br
.RI "\fIThe bind port for this listener\&. \fP"
.ti -1c
.RI "int \fBbufsize\fP"
.br
.RI "\fIThe size of the buffer to use\&. \fP"
.ti -1c
.RI "\fBtb_protocol_t\fP * \fBprotocol\fP"
.br
.RI "\fIThe protocol to use\&. \fP"
.ti -1c
.RI "int \fBsock_d\fP"
.br
.RI "\fIThe socket descriptor\&. \fP"
.ti -1c
.RI "\fBtb_options_t\fP * \fBoptions\fP"
.br
.RI "\fIThe options for the protocol\&. \fP"
.ti -1c
.RI "void * \fBprot_data\fP"
.br
.RI "\fIProtocol specific data\&. \fP"
.ti -1c
.RI "int \fBnum_connections\fP"
.br
.RI "\fIThe number of connections to create;\&. \fP"
.ti -1c
.RI "int \fBfile_size\fP"
.br
.RI "\fIThe size of the file to generate\&. \fP"
.ti -1c
.RI "FILE * \fBfp\fP"
.br
.RI "\fIA pointer to the file to read/write to/from\&. \fP"
.ti -1c
.RI "char * \fBfilename\fP"
.br
.RI "\fIThe name of the file to load\&. \fP"
.ti -1c
.RI "char * \fBdata\fP"
.br
.RI "\fIThe data to send\&. \fP"
.ti -1c
.RI "int \fBnum_send\fP"
.br
.RI "\fISend multiple times\&. \fP"
.ti -1c
.RI "struct addrinfo * \fBaddr_info\fP"
.br
.RI "\fIThe addrinfo for the endpoint\&. \fP"
.ti -1c
.RI "int \fBflags\fP"
.br
.RI "\fIThe flags for the endpoint\&. \fP"
.ti -1c
.RI "long long \fBtotal_tx_rx\fP"
.br
.RI "\fIthe total amount of data tx/rx\&. \fP"
.ti -1c
.RI "double \fBsec\fP"
.br
.RI "\fIThe seconds it took for the last transfer\&. \fP"
.ti -1c
.RI "\fBtb_prot_stats_t\fP * \fBstats\fP"
.br
.RI "\fIThe current stats\&. \fP"
.ti -1c
.RI "int \fBread\fP"
.br
.RI "\fICurrent stats have been read\&. \fP"
.ti -1c
.RI "int \fBmonitor\fP"
.br
.RI "\fIMonitor for stat collection\&. \fP"
.ti -1c
.RI "int \fBprint_stats\fP"
.br
.RI "\fIPrint stats to screen\&. \fP"
.ti -1c
.RI "\fBSTATUS\fP \fBstatus\fP"
.br
.RI "\fIThe current status of the listener\&. \fP"
.ti -1c
.RI "\fBCOMMAND\fP \fBcommand\fP"
.br
.RI "\fICommands to stop, etc\&. \fP"
.ti -1c
.RI "\fBCOMMAND\fP \fBs_tx_end\fP"
.br
.RI "\fIThe command to process if a tx ends\&. \fP"
.ti -1c
.RI "int \fBd_exit\fP"
.br
.RI "\fIDestroy on exit\&. \fP"
.ti -1c
.RI "\fBtb_test_params_t\fP * \fBparams\fP"
.br
.RI "\fIThe parameters for the test\&. \fP"
.ti -1c
.RI "int \fBlog_enabled\fP"
.br
.RI "\fILogging enabled/disabled\&. \fP"
.ti -1c
.RI "\fBtb_log_t\fP * \fBlog_info\fP"
.br
.RI "\fIInformation for logging\&. \fP"
.ti -1c
.RI "\fBtb_session_t\fP * \fBcurr_session\fP"
.br
.ti -1c
.RI "\fBtb_epoll_t\fP * \fBepoll\fP"
.br
.RI "\fIUsed by protocols that require epoll;\&. \fP"
.ti -1c
.RI "\fBtb_session_list_t\fP * \fBsession_list\fP"
.br
.RI "\fISession list\&. \fP"
.ti -1c
.RI "\fBfunct_l_exit\fP \fBf_exit\fP"
.br
.RI "\fICalled when aborting\&. \fP"
.ti -1c
.RI "\fBfunct_l_abort\fP \fBf_abort\fP"
.br
.RI "\fICalled when exiting\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 130 of file tb_listener\&.h\&.
.SH "Field Documentation"
.PP 
.SS "pthread_t* __l_thread"

.PP
The thread the listener is on\&. 
.PP
Definition at line 142 of file tb_listener\&.h\&.
.SS "int __num_threads"

.PP
The number of threads for listener\&. 
.PP
Definition at line 138 of file tb_listener\&.h\&.
.SS "gdsl_hash_t __sessions"
The active sessions for this listener\&. Maps address to listener\&. 
.PP
Definition at line 133 of file tb_listener\&.h\&.
.SS "gdsl_heap_t __workers"

.PP
The workers for this listener\&. 
.PP
Definition at line 137 of file tb_listener\&.h\&.
.SS "struct addrinfo* addr_info"

.PP
The addrinfo for the endpoint\&. 
.PP
Definition at line 173 of file tb_listener\&.h\&.
.SS "char* bind_address"

.PP
The bind address for this listener\&. 
.PP
Definition at line 157 of file tb_listener\&.h\&.
.SS "char* bind_port"

.PP
The bind port for this listener\&. 
.PP
Definition at line 158 of file tb_listener\&.h\&.
.SS "int bufsize"

.PP
The size of the buffer to use\&. 
.PP
Definition at line 159 of file tb_listener\&.h\&.
.SS "\fBCOMMAND\fP command"

.PP
Commands to stop, etc\&. 
.PP
Definition at line 189 of file tb_listener\&.h\&.
.SS "int cpu_affinity"

.PP
The affinity for the listener thread\&. 
.PP
Definition at line 150 of file tb_listener\&.h\&.
.SS "\fBtb_session_t\fP* curr_session"

.PP
Definition at line 201 of file tb_listener\&.h\&.
.SS "int d_exit"

.PP
Destroy on exit\&. 
.PP
Definition at line 191 of file tb_listener\&.h\&.
.SS "char* data"

.PP
The data to send\&. 
.PP
Definition at line 170 of file tb_listener\&.h\&.
.SS "\fBENDPOINT_TYPE\fP e_type"

.PP
The type of endpoint this is\&. 
.PP
Definition at line 154 of file tb_listener\&.h\&.
.SS "\fBtb_epoll_t\fP* epoll"

.PP
Used by protocols that require epoll;\&. 
.PP
Definition at line 202 of file tb_listener\&.h\&.
.SS "\fBfunct_l_abort\fP f_abort"

.PP
Called when exiting\&. 
.PP
Definition at line 207 of file tb_listener\&.h\&.
.SS "\fBfunct_l_exit\fP f_exit"

.PP
Called when aborting\&. 
.PP
Definition at line 206 of file tb_listener\&.h\&.
.SS "int file_size"

.PP
The size of the file to generate\&. 
.PP
Definition at line 167 of file tb_listener\&.h\&.
.SS "char* filename"

.PP
The name of the file to load\&. 
.PP
Definition at line 169 of file tb_listener\&.h\&.
.SS "int flags"

.PP
The flags for the endpoint\&. 
.PP
Definition at line 174 of file tb_listener\&.h\&.
.SS "FILE* fp"

.PP
A pointer to the file to read/write to/from\&. 
.PP
Definition at line 168 of file tb_listener\&.h\&.
.SS "int log_enabled"

.PP
Logging enabled/disabled\&. 
.PP
Definition at line 197 of file tb_listener\&.h\&.
.SS "\fBtb_log_t\fP* log_info"

.PP
Information for logging\&. 
.PP
Definition at line 198 of file tb_listener\&.h\&.
.SS "int main_cpu_aff"

.PP
The affinity for the main thread\&. 
.PP
Definition at line 151 of file tb_listener\&.h\&.
.SS "int monitor"

.PP
Monitor for stat collection\&. 
.PP
Definition at line 184 of file tb_listener\&.h\&.
.SS "int num_connections"

.PP
The number of connections to create;\&. 
.PP
Definition at line 164 of file tb_listener\&.h\&.
.SS "int num_proc"

.PP
The number of processors available\&. 
.PP
Definition at line 149 of file tb_listener\&.h\&.
.SS "int num_send"

.PP
Send multiple times\&. 
.PP
Definition at line 171 of file tb_listener\&.h\&.
.SS "\fBtb_options_t\fP* options"

.PP
The options for the protocol\&. 
.PP
Definition at line 162 of file tb_listener\&.h\&.
.SS "\fBtb_test_params_t\fP* params"

.PP
The parameters for the test\&. 
.PP
Definition at line 194 of file tb_listener\&.h\&.
.SS "int print_stats"

.PP
Print stats to screen\&. 
.PP
Definition at line 185 of file tb_listener\&.h\&.
.SS "void* prot_data"

.PP
Protocol specific data\&. 
.PP
Definition at line 163 of file tb_listener\&.h\&.
.SS "\fBtb_protocol_t\fP* protocol"

.PP
The protocol to use\&. 
.PP
Definition at line 160 of file tb_listener\&.h\&.
.SS "int read"

.PP
Current stats have been read\&. 
.PP
Definition at line 183 of file tb_listener\&.h\&.
.SS "\fBCOMMAND\fP s_tx_end"

.PP
The command to process if a tx ends\&. 
.PP
Definition at line 190 of file tb_listener\&.h\&.
.SS "double sec"

.PP
The seconds it took for the last transfer\&. 
.PP
Definition at line 179 of file tb_listener\&.h\&.
.SS "\fBtb_session_list_t\fP* session_list"

.PP
Session list\&. 
.PP
Definition at line 203 of file tb_listener\&.h\&.
.SS "GHashTable* sessions"

.PP
Active sessions\&. 
.PP
Definition at line 140 of file tb_listener\&.h\&.
.SS "int sock_d"

.PP
The socket descriptor\&. 
.PP
Definition at line 161 of file tb_listener\&.h\&.
.SS "pthread_cond_t* stat_cond"

.PP
The condition for releasing external threads\&. 
.PP
Definition at line 145 of file tb_listener\&.h\&.
.SS "pthread_mutex_t* stat_lock"

.PP
Locks the stats field for writing\&. 
.PP
Definition at line 144 of file tb_listener\&.h\&.
.SS "\fBtb_prot_stats_t\fP* stats"

.PP
The current stats\&. 
.PP
Definition at line 182 of file tb_listener\&.h\&.
.SS "\fBSTATUS\fP status"

.PP
The current status of the listener\&. 
.PP
Definition at line 188 of file tb_listener\&.h\&.
.SS "pthread_mutex_t* status_lock"

.PP
Lock for safe set/get of listener status\&. 
.PP
Definition at line 146 of file tb_listener\&.h\&.
.SS "int sys_tid"

.PP
The id returned from syscall\&. 
.PP
Definition at line 143 of file tb_listener\&.h\&.
.SS "long long total_tx_rx"

.PP
the total amount of data tx/rx\&. 
.PP
Definition at line 178 of file tb_listener\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for TestBed from the source code\&.
